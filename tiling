#!/bin/bash
#
# Tiling windows using xdotool
# A basic tool to tile windows with xdotool on my 21:9 ultrawides
#
# xfce inbuilt tiling support was too restrictive
#
# CHANGELOG
# 20220624 - remove prompt for install
# 20210825 - added 66/50 moved assignments around, second set makes more sense
#          - added 3rd misc set
# 20210816 - working, added reset for conflicting keys
#
# EXAMPLE
# Sizes/Layouts (+any combination)
#
#
# 33/50 x 6     [left|mid|right][top|bottom]
# +---------++---------++---------+
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# +---------++---------++---------+
# +---------++---------++---------+
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# +---------++---------++---------+
# 33/100 x 3    [left|mid|right]-full
# +---------++---------++---------+
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# |         ||         ||         |
# +---------++---------++---------+
# 66/100 x 1    [left|right]-2t
# +---------++--------------------+
# |/////////||                    |
# |\\\\\\\\\||                    |
# |/////////||                    |
# |\\\\\\\\\||                    |
# |/////////||                    |
# |\\\\\\\\\||                    |
# |/////////||                    |
# |\\\\\\\\\||                    |
# +---------++--------------------+
# 100/50 x 2    [top|bottom]-full
# +-------------------------------+
# |                               |
# |                               |
# |                               |
# +-------------------------------+
# +-------------------------------+
# |                               |
# |                               |
# |                               |
# +-------------------------------+
# 50/100 x 2    [left|right]-full
# +--------------+ +--------------+
# |              | |              |
# |              | |              |
# |              | |              |
# |              | |              |
# |              | |              |
# |              | |              |
# |              | |              |
# |              | |              |
# +--------------+ +--------------+
# 100/100       full
# +-------------------------------+
# |                               |
# |                               |
# |                               |
# |                               |
# |                               |
# |                               |
# |                               |
# |                               |
# +-------------------------------+
# 66/50 x 2    [left|right]-[top|bottom]-2t
# +---------++--------------------+
# +---------++--------------------+
# |/////////||                    |
# |\\\\\\\\\||                    |
# |/////////||                    |
# +---------++--------------------+
# +---------++--------------------+
# |/////////||                    |
# |\\\\\\\\\||                    |
# |/////////||                    |
# +---------++--------------------+

#
# USER MODIFIABLE
#
TITLE_BAR=22   # height of the titlebar
TILE_X=3       # default horiz tiling
TILE_Y=2       # default vert tiling
MON_TOTAL=2    # total monitors

function _usage {
  echo "$0 [left|right|mid]-[top|bottom|full]-[2t]"
}

function xfce_install {
  #read -r -p "This will replace your <Super> and <Super>/+<Ctrl|Alt> KP_[1-9] keyboard shortcuts, do you want to continue? [Y/n] " INPUT

  #SUPER
  declare -A SET1
  SET1=(
    [KP_1]='tiling left-bottom'
    [KP_2]='tiling mid-bottom'
    [KP_3]='tiling right-bottom'
    [KP_4]='tiling left-full'
    [KP_5]='tiling mid-full'
    [KP_6]='tiling right-full'
    [KP_7]='tiling left-top'
    [KP_8]='tiling mid-top'
    [KP_9]='tiling right-top'
  )

  #SUPER+CTRL
  declare -A SET2
  SET2=(
    [KP_1]='tiling left-bottom-2t'
    [KP_2]='tiling bottom-full'
    [KP_3]='tiling right-bottom-2t'
    [KP_4]='tiling left-2t'
    [KP_5]='tiling full'
    [KP_6]='tiling right-2t'
    [KP_7]='tiling left-top-2t'
    [KP_8]='tiling top-full'
    [KP_9]='tiling right-top-2t'
  )

  #SUPER+ALT
  declare -A SET3
  SET3=(
    [KP_1]='tiling left'
    [KP_2]='tiling full'
    [KP_3]='tiling right'
    [KP_4]=''
    [KP_5]=''
    [KP_6]=''
    [KP_7]=''
    [KP_8]=''
    [KP_9]=''
  )

    for KEY in "${!SET1[@]}"
    do
        MODKEY="<Super>"
        if [ -z "${SET1[$KEY]}" ]
        then
          echo "Empty Assignment, will not change for ${MODKEY}${KEY}"
        else
          xfce_uninstall ${MODKEY}${KEY} ${SET1[$KEY]}
          echo "Adding ${SET1[$KEY]} for ${MODKEY}${KEY}"
          xfconf-query -n -t string -c xfce4-keyboard-shortcuts -p "/commands/custom/${MODKEY}${KEY}" -s "${SET1[$KEY]}"
        fi
    done

    for KEY in "${!SET2[@]}"
    do
        if [ -z "${SET2[$KEY]}" ]
        then
          echo "Empty Assignment, will not change for ${MODKEY}${KEY}"
        else
          MODKEY="<Super><Ctrl>"
          xfce_uninstall ${MODKEY}${KEY} ${SET2[$KEY]}
          echo "Adding ${SET2[$KEY]} for ${MODKEY}${KEY}"
          xfconf-query -n -t string -c xfce4-keyboard-shortcuts -p "/commands/custom/${MODKEY}${KEY}" -s "${SET2[$KEY]}"
        fi
    done

    for KEY in "${!SET3[@]}"
    do
        if [ -z "${SET3[$KEY]}" ]
        then
          echo "Empty Assignment, will not change for ${MODKEY}${KEY}"
        else
          MODKEY="<Super><Alt>"
          xfce_uninstall ${MODKEY}${KEY} ${SET3[$KEY]}
          echo "Adding ${SET3[$KEY]} for ${MODKEY}${KEY}"
          xfconf-query -n -t string -c xfce4-keyboard-shortcuts -p "/commands/custom/${MODKEY}${KEY}" -s "${SET3[$KEY]}"
        fi
    done
}

function xfce_uninstall {
  local KEY=$1
  local VALUE=$2
  echo "Reset value ${VALUE} for  ${KEY}"
  xfconf-query -c xfce4-keyboard-shortcuts -p "/commands/custom/${KEY}" -s "${VALUE}" -r
}


#
# XDOTOOL
#
XDT=$(which xdotool)

#
# CURRENT DISPLAY
#
DISP_GEOM=$($XDT getdisplaygeometry)
DISP_X=$(echo $DISP_GEOM | awk '{print $1}')
DISP_Y=$(echo $DISP_GEOM | awk '{print $2}')

#
# SECOND DISPLAY 0,0
#
OFFSET_X=$DISP_X
OFFSET_Y=0

#
# ACTIVE WINDOW
#
WM_ACTIVE=$($XDT getactivewindow)
WM_ACT_GEOM=$($XDT getwindowgeometry $WM_ACTIVE)
WM_ACT_POSX=$(echo $WM_ACT_GEOM | awk '{print $4}' | cut -d',' -f1)
WM_ACT_POSY=$(echo $WM_ACT_GEOM | awk '{print $4}' | cut -d',' -f2)

#
# DEFAULT WINDOW SIZES (%)
#
WM_X_PCT=33
WM_Y_PCT=50

#
# ACTIVE MONITOR
#
if [ $WM_ACT_POSX -gt $OFFSET_X ]
then
  MON_NUM=1
else
  MON_NUM=0
fi

# 
# LAYOUTS
#
case $1 in
  left-top)
    POS_X=0
    POS_Y=0
    ;;
  left-bottom)
    POS_X=0
    POS_Y=1
    ;;
  mid-top)
    POS_X=33
    POS_Y=0
    ;;
  mid-bottom)
    POS_X=33
    POS_Y=1
    ;;
  right-top)
    POS_X=2
    POS_Y=0
    ;;
  right-bottom)
    POS_X=2
    POS_Y=1
    ;;
  full)
    POS_X=0
    POS_Y=0
    WM_X_PCT=100
    WM_Y_PCT=100
    ;;
  left)
    POS_X=0
    POS_Y=0
    WM_X_PCT=50
    WM_Y_PCT=100
    ;;
  right)
    POS_X=50
    POS_Y=0
    WM_X_PCT=50
    WM_Y_PCT=100
    ;;
  left-full)
    POS_X=0
    POS_Y=0
    WM_X_PCT=33
    WM_Y_PCT=100
    ;;
  mid-full)
    POS_X=1
    POS_Y=0
    WM_X_PCT=33
    WM_Y_PCT=100
    ;;
  right-full)
    POS_X=2
    POS_Y=0
    WM_X_PCT=33
    WM_Y_PCT=100
    ;;
  left-2t)
    POS_X=0
    POS_Y=0
    WM_X_PCT=66
    WM_Y_PCT=100
    ;;
  right-2t)
    POS_X=33
    POS_Y=0
    WM_X_PCT=66
    WM_Y_PCT=100
    ;;
  top-full)
    POS_X=0
    POS_Y=0
    WM_X_PCT=100
    WM_Y_PCT=50
    ;;
  bottom-full)
    POS_X=0
    POS_Y=1
    WM_X_PCT=100
    WM_Y_PCT=50
    ;;
  left-top-2t)
    POS_X=0
    POS_Y=0
    WM_X_PCT=66
    WM_Y_PCT=50
    ;;
  left-bottom-2t)
    POS_X=0
    POS_Y=1
    WM_X_PCT=66
    WM_Y_PCT=50
    ;;
  right-top-2t)
    POS_X=33
    POS_Y=0
    WM_X_PCT=66
    WM_Y_PCT=50
    ;;
  right-bottom-2t)
    POS_X=33
    POS_Y=1
    WM_X_PCT=66
    WM_Y_PCT=50
    ;;
  xfce-install)
    xfce_install
    exit
    ;;
  *)
    _usage
    exit
esac

#
# WINDOW SIZE PCT(%)
#
case $WM_X_PCT in
  33)
    WIN_X_SIZE=$(( $DISP_X / $TILE_X ))
    ;;
  50)
    WIN_X_SIZE=$(( $DISP_X / 2 ))
    ;;
  66)
    WIN_X_SIZE=$(( ( $DISP_X / 3 ) + ( $DISP_X / 3 ) ))
    ;;
  100)
    WIN_X_SIZE=$DISP_X
    ;;
esac

case $WM_Y_PCT in
  33|50)
    WIN_Y_SIZE=$(( ( $DISP_Y / $TILE_Y ) - ( $TITLE_BAR * $TILE_Y )))
    ;;
  100)
    WIN_Y_SIZE=$(( $DISP_Y - ( $TITLE_BAR * $TILE_Y ) ))
    ;;
esac

#
# APPLY WINDOW SIZE
#
$XDT windowsize $WM_ACTIVE $WIN_X_SIZE $WIN_Y_SIZE

#
# POSITIONAL MOD
#
case $POS_Y in
  1)
    TITLE_BAR=$(( $TITLE_BAR * $TILE_Y + ( $TITLE_BAR / 2 ) ))
    ;;
  *)
    TITLE_BAR=0
    ;;
esac

case $POS_X in
  33)
    WM_MV_X=$(( ( $OFFSET_X * $MON_NUM ) + ( $DISP_X / 3 ) )) 
    ;;
  50)
    WM_MV_X=$(( ( $OFFSET_X * $MON_NUM ) + ( $DISP_X / 2 ) )) 
    ;;
  *)
    WM_MV_X=$(( ( $OFFSET_X * $MON_NUM ) + ( $POS_X * $WIN_X_SIZE ) )) 
    ;;
esac

WM_MV_Y=$(( ( $OFFSET_Y * $MON_NUM ) + ( $POS_Y * $WIN_Y_SIZE ) + $TITLE_BAR ))


#
# MOVE THE WINDOW
#
$XDT windowmove $WM_ACTIVE $WM_MV_X $WM_MV_Y

